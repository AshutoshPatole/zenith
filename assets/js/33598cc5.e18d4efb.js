"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5459],{3067:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>n,metadata:()=>o,toc:()=>d});var i=a(5893),r=a(1151);const n={sidebar_position:7,slug:"/raid",title:"Redundant Array of Independent Disks (RAID)"},s=void 0,o={id:"Linux/raid",title:"Redundant Array of Independent Disks (RAID)",description:"---",source:"@site/docs/Linux/raid.mdx",sourceDirName:"Linux",slug:"/raid",permalink:"/zenith/raid",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"AshutoshPatole18",lastUpdatedAt:1706787221,formattedLastUpdatedAt:"Feb 1, 2024",sidebarPosition:7,frontMatter:{sidebar_position:7,slug:"/raid",title:"Redundant Array of Independent Disks (RAID)"},sidebar:"tutorialSidebar",previous:{title:"Access Control Lists",permalink:"/zenith/acl"},next:{title:"Logic Volume Manager",permalink:"/zenith/lvm"}},l={},d=[{value:"What is RAID?",id:"what-is-raid",level:2},{value:"Why RAID?",id:"why-raid",level:2},{value:"Hardware RAID",id:"hardware-raid",level:2},{value:"Software RAID",id:"software-raid",level:2},{value:"Levels",id:"levels",level:2},{value:"Level 0",id:"level-0",level:3},{value:"Level 1",id:"level-1",level:3},{value:"Level 4",id:"level-4",level:3},{value:"Level 5",id:"level-5",level:3}];function h(e){const t={admonition:"admonition",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.p,{children:"The basic idea behind RAID is to combine multiple small, inexpensive disk drives into an array to accomplish performance or redundancy goals not attainable with one large and expensive drive. This array of drives appears to the computer as a single logical storage unit or drive."}),"\n",(0,i.jsx)(t.h2,{id:"what-is-raid",children:"What is RAID?"}),"\n",(0,i.jsxs)(t.p,{children:["RAID allows information to access several disks. RAID uses techniques such as disk ",(0,i.jsx)(t.strong,{children:"striping"})," (RAID Level 0), disk ",(0,i.jsx)(t.strong,{children:"mirroring"})," (RAID Level 1), and disk ",(0,i.jsx)(t.strong,{children:"striping with parity"})," (RAID Level 5) to achieve redundancy, lower latency, increased bandwidth, and maximized ability to recover from hard disk crashes.\nRAID consistently distributes data across each drive in the array. RAID then breaks down the data into consistently-sized chunks (commonly 32K or 64k, although other values are acceptable). Each chunk is then written to a hard drive in the RAID array according to the RAID level employed. When the data is read, the process is reversed, giving the illusion that the multiple drives in the array are actually one large drive."]}),"\n",(0,i.jsx)(t.h2,{id:"why-raid",children:"Why RAID?"}),"\n",(0,i.jsx)(t.p,{children:"Primary reasons to deploy RAID include:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Enhances speed"}),"\n",(0,i.jsx)(t.li,{children:"Increases storage capacity using a single virtual disk"}),"\n",(0,i.jsx)(t.li,{children:"Minimizes disk failure"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"There are two possible RAID approaches: hardware RAID and software RAID."}),"\n",(0,i.jsx)(t.h2,{id:"hardware-raid",children:"Hardware RAID"}),"\n",(0,i.jsx)(t.p,{children:"The hardware-based array manages the RAID subsystem independently from the host. It presents a single disk per RAID array to the host.\nA hardware RAID device connects to the SCSI controller and presents the RAID arrays as a single SCSI drive. An external RAID system moves all RAID handling \u201cintelligence\u201d into a controller located in the external disk subsystem. The whole subsystem is connected to the host via a normal SCSI controller and appears to the host as a single disk.\nRAID controller cards function like a SCSI controller to the operating system, and handle all the actual drive communications. The user plugs the drives into the RAID controller (just like a normal SCSI controller) and then adds them to the RAID controllers configuration, and the operating system won't know the difference."}),"\n",(0,i.jsx)(t.h2,{id:"software-raid",children:"Software RAID"}),"\n",(0,i.jsx)(t.p,{children:"Software RAID implements the various RAID levels in the kernel disk (block device) code. It offers the cheapest possible solution, as expensive disk controller cards or hot-swap chassis are not required. Software RAID also works with cheaper IDE disks as well as SCSI disks. With today's faster CPUs, software RAID outperforms hardware RAID.\nThe Linux kernel contains an MD driver that allows the RAID solution to be completely hardware independent. The performance of a software-based array depends on the server CPU performance and load.\nTo learn more about software RAID, here are the key features:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Threaded rebuild process"}),"\n",(0,i.jsx)(t.li,{children:"Kernel-based configuration"}),"\n",(0,i.jsx)(t.li,{children:"Portability of arrays between Linux machines without reconstruction"}),"\n",(0,i.jsx)(t.li,{children:"Backgrounded array reconstruction using idle system resources"}),"\n",(0,i.jsx)(t.li,{children:"Hot-swappable drive support"}),"\n",(0,i.jsx)(t.li,{children:"Automatic CPU detection to take advantage of certain CPU optimizations"}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"levels",children:"Levels"}),"\n",(0,i.jsx)(t.h3,{id:"level-0",children:"Level 0"}),"\n",(0,i.jsxs)(t.p,{children:["RAID level 0, often called ",(0,i.jsx)(t.strong,{children:"\u201cstriping\u201d"}),", is a performance-oriented striped data mapping technique. This means the data being written to the array is broken down into strips and written across the member disks of the array, allowing high I/O performance at low inherent cost but provides no redundancy. The storage capacity of a level 0 array is equal to the total capacity of the member disks in a hardware RAID or the total capacity of member partitions in a software RAID."]}),"\n",(0,i.jsx)(t.h3,{id:"level-1",children:"Level 1"}),"\n",(0,i.jsxs)(t.p,{children:["RAID level 1, or ",(0,i.jsx)(t.strong,{children:"\u201cmirroring\u201d"}),", has been used longer than any other form of RAID. Level 1 provides redundancy by writing identical data to each member disk of the array, leaving a \u201cmirrored\u201d copy on each disk. Mirroring remains popular due to its simplicity and high level of data availability. Level 1 operates with two or more disks that may use parallel access for high data-transfer rates when reading but more commonly operate independently to provide high I/O transaction rates. Level 1 provides very good data reliability and improves performance for read-intensive applications but at a relatively high cost. The storage capacity of the level 1 array is equal to the capacity of one of the mirrored hard disks in a hardware RAID or one of the mirrored partitions in a software RAID."]}),"\n",(0,i.jsx)(t.admonition,{type:"note",children:(0,i.jsx)(t.p,{children:"RAID level 1 comes at a high cost because you write the same information to all of the disks in the array, which wastes drive space. For example, if you have RAID level 1 set up so that your root (/) partition exists on two 40G drives, you have 80G total but are only able to access 40G of that 80G. The other 40G acts like a mirror of the first 40G."})}),"\n",(0,i.jsx)(t.h3,{id:"level-4",children:"Level 4"}),"\n",(0,i.jsx)(t.p,{children:"RAID level 4 uses parity concentrated on a single disk drive to protect data. It is better suited to transaction I/O rather than large file transfers. Because the dedicated parity disk represents an inherent bottleneck, level 4 is seldom used without accompanying technologies such as write-back caching. Although RAID level 4 is an option in some RAID partitioning schemes, it is not an option allowed in Red Hat Enterprise Linux RAID installations. The storage capacity of hardware RAID level 4 is equal to the capacity of member disks, minus the capacity of one member disk. The storage capacity of software RAID level 4 is equal to the capacity of the member partitions, minus the size of one of the partitions if they are of equal size."}),"\n",(0,i.jsx)(t.admonition,{type:"info",children:(0,i.jsx)(t.p,{children:"RAID level 4 takes up the same amount of space as RAID level 5, but level 5 has more advantages. For this reason, level 4 is not supported."})}),"\n",(0,i.jsx)(t.h3,{id:"level-5",children:"Level 5"}),"\n",(0,i.jsx)(t.p,{children:"RAID level 5 is the most common type of RAID. By distributing parity across some or all of an array's member disk drives, RAID level 5 eliminates the write bottleneck inherent in level 4. The only performance bottleneck is the parity calculation process. With modern CPUs and software RAID, that usually is not a very big problem. As with level 4, the result is asymmetrical performance, with reads substantially outperforming writes. Level 5 is often used with write-back caching to reduce the asymmetry. The storage capacity of hardware RAID level 5 is equal to the capacity of member disks, minus the capacity of one member disk. The storage capacity of software RAID level 5 is equal to the capacity of the member partitions, minus the size of one of the partitions if they are of equal size."})]})}function c(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},1151:(e,t,a)=>{a.d(t,{Z:()=>o,a:()=>s});var i=a(7294);const r={},n=i.createContext(r);function s(e){const t=i.useContext(n);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(n.Provider,{value:t},e.children)}}}]);
"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8697],{659:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var a=n(5893),o=n(1151);const i={sidebar_position:3,slug:"/osus",title:"OpenShift Update Service"},r=void 0,s={id:"Containers/OpenShift/Operator/openshift_update_service",title:"OpenShift Update Service",description:"---",source:"@site/docs/Containers/OpenShift/Operator/openshift_update_service.mdx",sourceDirName:"Containers/OpenShift/Operator",slug:"/osus",permalink:"/zenith/osus",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"AshutoshPatole18",lastUpdatedAt:1706788254,formattedLastUpdatedAt:"Feb 1, 2024",sidebarPosition:3,frontMatter:{sidebar_position:3,slug:"/osus",title:"OpenShift Update Service"},sidebar:"tutorialSidebar",previous:{title:"Operator Lifecycle Manager",permalink:"/zenith/olm"},next:{title:"Operators in Openshift Network",permalink:"/zenith/operators-in-openshift-network"}},h={},p=[];function c(e){const t={a:"a",hr:"hr",p:"p",strong:"strong",...(0,o.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.p,{children:"The OpenShift Update Service (OSUS) provides over-the-air updates to OpenShift Container Platform, including Red Hat Enterprise Linux CoreOS (RHCOS). It provides a graph, or diagram, that contains the vertices of component Operators and the edges that connect them. The edges in the graph show which versions you can safely update to. The vertices are update payloads that specify the intended state of the managed cluster components."}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.strong,{children:"Cluster Version Operator (CVO)"})," in your cluster checks with the OpenShift Update Service to see the valid updates and update paths based on current component versions and information in the graph. When you request an update, the CVO uses the release image for that update to update your cluster. The release artifacts are hosted in Quay as container images."]}),"\n",(0,a.jsx)(t.p,{children:"The Operator that manages the other Operators in an OpenShift cluster is the Cluster Version Operator."}),"\n",(0,a.jsx)(t.p,{children:"To allow the OpenShift Update Service to provide only compatible updates, a release verification pipeline drives automation. Each release artifact is verified for compatibility with supported cloud platforms and system architectures, as well as other component packages. After the pipeline confirms the suitability of a release, the OpenShift Update Service notifies you that it is available."}),"\n",(0,a.jsx)(t.p,{children:"Two controllers run during continuous update mode. The first controller continuously updates the payload manifests, applies the manifests to the cluster, and outputs the controlled rollout status of the Operators to indicate whether they are available, upgrading, or failed. The second controller polls the OpenShift Update Service to determine if updates are available."}),"\n",(0,a.jsxs)(t.p,{children:["During the update process, the ",(0,a.jsx)(t.a,{href:"/mco",children:"Machine Config Operator (MCO)"})," applies the new configuration to your cluster machines. The MCO cordons the number of nodes as specified by the maxUnavailable field on the machine configuration pool and marks them as unavailable. By default, this value is set to 1. The MCO then applies the new configuration and reboots the machine."]}),"\n",(0,a.jsxs)(t.p,{children:["If you use Red Hat Enterprise Linux (RHEL) machines as workers, the MCO ",(0,a.jsx)(t.strong,{children:"does not"})," update the kubelet because you must update the OpenShift API on the machines first."]}),"\n",(0,a.jsx)(t.p,{children:"With the specification for the new version applied to the old kubelet, the RHEL machine cannot return to the Ready state. You cannot complete the update until the machines are available. However, the maximum number of unavailable nodes is set to ensure that normal cluster operations can continue with that number of machines out of service."})]})}function u(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>s,a:()=>r});var a=n(7294);const o={},i=a.createContext(o);function r(e){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);
"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6175],{3626:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>h});var i=t(5893),s=t(1151);const o={sidebar_position:6,slug:"/rhcos",title:"RedHat CoreOS"},r=void 0,a={id:"Containers/OpenShift/rhcos",title:"RedHat CoreOS",description:"---",source:"@site/docs/Containers/OpenShift/rhcos.mdx",sourceDirName:"Containers/OpenShift",slug:"/rhcos",permalink:"/zenith/rhcos",draft:!1,unlisted:!1,tags:[],version:"current",lastUpdatedBy:"AshutoshPatole18",lastUpdatedAt:1706788254,formattedLastUpdatedAt:"Feb 1, 2024",sidebarPosition:6,frontMatter:{sidebar_position:6,slug:"/rhcos",title:"RedHat CoreOS"},sidebar:"tutorialSidebar",previous:{title:"Machine Sets",permalink:"/zenith/machine-set"},next:{title:"What is Controller ?",permalink:"/zenith/what-is-controller"}},l={},h=[{value:"Why RHCOS ?",id:"why-rhcos-",level:2},{value:"About Ignitions",id:"about-ignitions",level:2},{value:"How Ignition works",id:"how-ignition-works",level:3},{value:"The Ignition sequence",id:"the-ignition-sequence",level:3}];function c(e){const n={code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"why-rhcos-",children:"Why RHCOS ?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Based on RHEL"}),": The underlying operating system consists primarily of RHEL components. The same quality, security, and control measures that support RHEL also support RHCOS."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Controlled immutability"}),": Although it contains RHEL components, RHCOS is designed to be managed more tightly than a default RHEL installation. When you set up your RHCOS machines, you can modify only a few system settings. This controlled immutability allows OpenShift Container Platform to store the latest state of RHCOS systems in the cluster so it is always able to create additional machines and perform updates based on the latest RHCOS configurations."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"CRI-O container runtime"}),": Although RHCOS contains features for running the OCI- and libcontainer-formatted containers that Docker requires, it incorporates the CRI-O container engine instead of the Docker container engine. By focusing on features needed by Kubernetes platforms, such as OpenShift Container Platform, CRI-O can offer specific compatibility with different Kubernetes versions. CRI-O also offers a smaller footprint and reduced attack surface than is possible with container engines that offer a larger feature set. At the moment, CRI-O is the only engine available within OpenShift Container Platform clusters."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"rpm-ostree upgrades"}),": RHCOS features transactional upgrades using the rpm-ostree system. Updates are delivered by means of container images and are part of the OpenShift Container Platform update process. When deployed, the container image is pulled, extracted, and written to disk, then the bootloader is modified to boot into the new version. The machine will reboot into the update in a rolling manner to ensure cluster capacity is minimally impacted."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Updated through the Machine Config Operator"}),": In OpenShift Container Platform, the Machine Config Operator handles operating system upgrades. Instead of upgrading individual packages, as is done with yum upgrades, rpm-ostree delivers upgrades of the OS as an atomic unit. The new OS deployment is staged during upgrades and goes into effect on the next reboot. If something goes wrong with the upgrade, a single rollback and reboot returns the system to the previous state. RHCOS upgrades in OpenShift Container Platform are performed during cluster updates."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"about-ignitions",children:"About Ignitions"}),"\n",(0,i.jsx)(n.p,{children:"Ignition is the utility that is used by RHCOS to manipulate disks during initial configuration. It completes common disk tasks, including partitioning disks, formatting partitions, writing files, and configuring users. On first boot, Ignition reads its configuration from the installation media or the location that you specify and applies the configuration to the machines."}),"\n",(0,i.jsx)(n.p,{children:"Whether you are installing your cluster or adding machines to it, Ignition always performs the initial configuration of the OpenShift Container Platform cluster machines. Most of the actual system setup happens on each machine itself. For each machine, Ignition takes the RHCOS image and boots the RHCOS kernel. Options on the kernel command line, identify the type of deployment and the location of the Ignition-enabled initial Ram disk (initramfs)."}),"\n",(0,i.jsx)(n.h3,{id:"how-ignition-works",children:"How Ignition works"}),"\n",(0,i.jsx)(n.p,{children:"To create machines by using Ignition, you need Ignition config files. The OpenShift Container Platform installation program creates the Ignition config files that you need to deploy your cluster. These files are based on the information that you provide to the installation program directly or through an install-config.yaml file."}),"\n",(0,i.jsxs)(n.p,{children:["The way that Ignition configures machines is similar to how tools like ",(0,i.jsx)(n.code,{children:"cloud-init"})," or Linux Anaconda ",(0,i.jsx)(n.code,{children:"kickstart"})," configure systems, but with some important differences:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Ignition runs from an initial RAM disk that is separate from the system you are installing to. Because of that, Ignition can repartition disks, set up file systems, and perform other changes to the machine's permanent file system. In contrast, cloud-init runs as part of a machine's init system when the system boots, so making foundational changes to things like disk partitions cannot be done as easily. With cloud-init, it is also difficult to reconfigure the boot process while you are in the middle of the node's boot process."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Ignition is meant to initialize systems, not change existing systems. After a machine initializes and the kernel is running from the installed system, the Machine Config Operator from the OpenShift Container Platform cluster completes all future machine configuration."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"After Ignition finishes configuring a machine, the kernel keeps running but discards the initial RAM disk and pivots to the installed system on disk. All of the new system services and other features start without requiring a system reboot."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Because Ignition confirms that all new machines meet the declared configuration, you cannot have a partially-configured machine. If a machine''s setup fails, the initialization process does not finish, and Ignition does not start the new machine. Your cluster will never contain partially-configured machines. If Ignition cannot complete, the machine is not added to the cluster. You must add a new machine instead. This behavior prevents the difficult case of debugging a machine when the results of a failed configuration task are not known until something that depended on it fails at a later date."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Because Ignition can start with a completely empty hard disk, it can do something cloud-init cannot do: set up systems on bare metal from scratch (using features such as ",(0,i.jsx)(n.code,{children:"PXE boot"}),"). In the bare metal case, the Ignition config is injected into the boot partition so Ignition can find it and configure the system correctly."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"the-ignition-sequence",children:"The Ignition sequence"}),"\n",(0,i.jsx)(n.p,{children:"The Ignition process for an RHCOS machine in an OpenShift Container Platform cluster involves the following steps:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"The machine gets its Ignition config file. Control plane machines (also known as the master machines) get their Ignition config files from the bootstrap machine, and worker machines get Ignition config files from a control plane."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Ignition creates disk partitions, file systems, directories, and links on the machine. It supports RAID arrays but ",(0,i.jsx)(n.strong,{children:"does not support LVM volumes"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Ignition mounts the root of the permanent file system to the ",(0,i.jsx)(n.code,{children:"/sysroot"})," directory in the initramfs and starts working in that ",(0,i.jsx)(n.code,{children:"/sysroot"})," directory."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Ignition configures all defined file systems and sets them up to mount appropriately at runtime."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Ignition runs systemd temporary files to populate required files in the ",(0,i.jsx)(n.code,{children:"/var"})," directory."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Ignition runs the Ignition config files to set up users, ",(0,i.jsx)(n.code,{children:"systemd unit"})," files, and other configuration files."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Ignition unmounts all components in the permanent system that were mounted in the initramfs."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Ignition starts up new machine's init process which, in turn, starts up all other services on the machine that run during system boot."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"The machine is then ready to join the cluster and does not require a reboot."})]})}function d(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>r});var i=t(7294);const s={},o=i.createContext(s);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);